% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bruceR_stats_05_advance.R
\name{PROCESS}
\alias{PROCESS}
\title{PROCESS for mediation and/or moderation analyses.}
\usage{
PROCESS(
  data,
  y = "",
  x = "",
  meds = c(),
  mods = c(),
  covs = c(),
  clusters = c(),
  hlm.rand = "",
  hlm.type = c("2-2-1", "2-1-1", "1-1-1"),
  med.type = c("parallel", "serial"),
  mod.type = c("2-way", "3-way"),
  mod.path = c("x-y", "x-m", "m-y", "all"),
  cov.path = c("y", "m", "both"),
  mod1.val = NULL,
  mod2.val = NULL,
  ci = c("boot", "bc.boot", "bca.boot", "mcmc"),
  nsim = 100,
  seed = 1,
  std = FALSE,
  nsmall = 3,
  file = NULL
)
}
\arguments{
\item{data}{Data frame.}

\item{y, x}{Variable name of outcome (Y) and predictor (X).

It supports continuous (numeric) and dichotomous (factor) variables.}

\item{meds}{Variable name(s) of mediator(s) (M).
Use \code{c()} to combine multiple mediators.

It supports continuous (numeric) and dichotomous (factor) variables.

It allows an infinite number of mediators in parallel
or 2~4 mediators in serial.

Order matters when \code{med.type="serial"}
(PROCESS Model 6: serial mediation).}

\item{mods}{Variable name(s) of 0~2 moderator(s) (W).
Use \code{c()} to combine multiple moderators.

It supports all types of variables:
continuous (numeric), dichotomous (factor), and multicategorical (factor).

Order matters when \code{mod.type="3-way"}
(PROCESS Models 3, 5.3, 11, 12, 18, 19, 72, and 73).

* Do not set this parameter when \code{med.type="serial"}
(PROCESS Model 6).}

\item{covs}{Variable name(s) of covariate(s) (i.e., control variables).
Use \code{c()} to combine multiple covariates.
It supports all types of (and an infinite number of) variables.}

\item{clusters}{(coming soon...) HLM (multilevel) cluster(s).}

\item{hlm.rand}{(coming soon...) HLM (multilevel) random effect term.}

\item{hlm.type}{(coming soon...) HLM (multilevel) mediation type:
\code{"2-2-1"}, \code{"2-1-1"}, or \code{"1-1-1"}.}

\item{med.type}{Type of mediator:
\code{"parallel"} (default) or \code{"serial"}
(PROCESS Model 6).
Partial matches of \code{"p"} or \code{"s"} also work.}

\item{mod.type}{Type of moderator:
\code{"2-way"} (default) or \code{"3-way"}
(PROCESS Models 3, 5.3, 11, 12, 18, 19, 72, and 73).
Partial matches of \code{"2"} or \code{"3"} also work.}

\item{mod.path}{Which path(s) do the moderator(s) influence?
\code{"x-y"}, \code{"x-m"}, \code{"m-y"}, or any combination of them
(use \code{c()} to combine), or \code{"all"} (i.e., all of them).}

\item{cov.path}{Which path(s) do the control variable(s) influence?
\code{"y"}, \code{"m"}, or \code{"both"} (default).}

\item{mod1.val, mod2.val}{By default (\code{NULL}), it uses
\strong{Mean +/- SD} of a continuous moderator (numeric) or
\strong{all levels} of a dichotomous/multicategorical moderator (factor) to
perform simple slope analyses and/or conditional mediation analyses.
You can also manually specify the values: e.g.,
\code{mod1.val=c(1, 3, 5)} or \code{mod1.val=c("A", "B", "C")}.}

\item{ci}{Method for estimating the standard error (SE) and
95\% confidence interval (CI) of indirect effect(s).
Default is \code{"boot"} for (generalized) linear models or
\code{"mcmc"} for (generalized) linear mixed models (multilevel models).
\describe{
  \item{\code{"boot"}}{Percentile Bootstrap}
  \item{\code{"bc.boot"}}{Bias-Corrected Percentile Bootstrap}
  \item{\code{"bca.boot"}}{Bias-Corrected and Accelerated (BCa) Percentile Bootstrap}
  \item{\code{"mcmc"}}{Markov Chain Monte Carlo (Quasi-Bayesian)}
}}

\item{nsim}{Number of simulation samples (bootstrap resampling or Monte Carlo simulation)
for estimating SE and 95\% CI. Default is \code{100} for running examples faster.
In formal analyses, however, \strong{\code{nsim=1000} (or larger)} is strongly suggested!}

\item{seed}{Random seed for obtaining reproducible results.
Default is \code{1} (just an uncountable number).
You may set to any number you prefer (e.g., \code{seed=5201314}).

Note that all mediation models include random processes
(i.e., bootstrap resampling or Monte Carlo simulation).
To get exactly the same results, you have to set a random seed.
However, even you set the same seed number, it is unlikely to
get the same results across different R packages
(e.g., \code{\link[lavaan:lavaan-class]{lavaan}} vs. \code{\link[mediation:mediate]{mediation}})
or softwares (e.g., SPSS, Mplus, R, jamovi).}

\item{std}{Standardized coefficients? Default is \code{FALSE}.
If \code{TRUE}, then it will standardize all numeric (continuous) variables
before building regression models.}

\item{nsmall}{Number of decimal places of output. Default is \code{3}.}

\item{file}{File name of MS Word (\code{.doc}).
Only regression models will be saved (using \code{\link{model_summary}}).}
}
\description{
PROCESS for mediation and/or moderation analyses.
}
\examples{
\donttest{#### NOTE ####
## In the following examples, I set nsim=100 to save time.
## In formal analyses, nsim=1000 (or larger) is suggested!

#### Demo Data ####
# ?mediation::student
data=mediation::student \%>\%
  # dplyr::slice_sample(n=567) \%>\%
  dplyr::select(SCH_ID, free, smorale, pared, income,
                gender, work, attachment, fight, late, score)
names(data)[2:3]=c("SCH_free", "SCH_morale")
names(data)[4:7]=c("parent_edu", "family_inc", "gender", "partjob")
data$gender01=1-data$gender  # 0 = female, 1 = male
# dichotomous X: as.factor()
data$gender=factor(data$gender01, levels=0:1, labels=c("Female", "Male"))
# dichotomous Y: as.factor()
data$pass=as.factor(ifelse(data$score>=50, 1, 0))

#### Descriptive Statistics and Correlation Analyses ####
Freq(data$gender)
Freq(data$pass)
Describe(data)     # file="xxx.doc"
Corr(data[,4:11])  # file="xxx.doc"

#### PROCESS Analyses ####

## Model 1 ##
PROCESS(data, y="score", x="late", mods="gender")  # continuous Y
PROCESS(data, y="pass", x="late", mods="gender")   # dichotomous Y

# (Johnson-Neyman (J-N) interval and plot)
PROCESS(data, y="score", x="gender", mods="late")->P
P$results[[1]]$jn[[1]]       # Johnson-Neyman interval
P$results[[1]]$jn[[1]]$plot  # Johnson-Neyman plot (ggplot object)
GLM_summary(P$model.y)       # detailed results of regression

# (allows multicategorical moderator)
d=airquality
d$Month=as.factor(d$Month)  # moderator
PROCESS(d, y="Temp", x="Solar.R", mods="Month")

## Model 2 ##
PROCESS(data, y="score", x="late",
        mods=c("gender", "family_inc"),
        mod.type="2-way")  # or omit this, default is "2-way"

## Model 3 ##
PROCESS(data, y="score", x="late",
        mods=c("gender", "family_inc"),
        mod.type="3-way")
PROCESS(data, y="pass", x="gender",
        mods=c("late", "family_inc"),
        mod.type="3-way")

## Model 4 ##
PROCESS(data, y="score", x="parent_edu",
        meds="family_inc", covs="gender",
        ci="boot", nsim=100, seed=1)
PROCESS(data, y="score", x="parent_edu",
        meds="family_inc", covs="gender",
        ci="bca.boot", nsim=100, seed=1)
PROCESS(data, y="score", x="parent_edu",
        meds="family_inc", covs="gender",
        ci="mcmc", nsim=100, seed=1)

# (allows an infinite number of multiple mediators in parallel)
PROCESS(data, y="score", x="parent_edu",
        meds=c("family_inc", "late"),
        covs=c("gender", "partjob"),
        nsim=100, seed=1)

## Model 5 / 5.2 / 5.3 ##
PROCESS(data, y="score", x="fight",
        meds="late",
        mods="gender",
        covs="parent_edu",
        mod.path="x-y",
        nsim=100, seed=1)
PROCESS(data, y="score", x="fight",
        meds=c("late", "attachment"),
        mods=c("gender", "partjob"),
        covs=c("parent_edu", "family_inc"),
        mod.path="x-y",
        mod.type="3-way",
        nsim=100, seed=1)

## Model 6 ##
PROCESS(data, y="score", x="parent_edu",
        meds=c("family_inc", "late"),
        covs=c("gender", "partjob"),
        med.type="serial",
        nsim=100, seed=1)

## Model 8 ##
PROCESS(data, y="score", x="fight",
        meds="late",
        mods="gender",
        mod.path=c("x-m", "x-y"),
        nsim=100, seed=1)

## Model 10 ##
PROCESS(data, y="score", x="fight",
        meds="late",
        mods=c("gender", "family_inc"),
        mod.path=c("x-m", "x-y"),
        mod.type="2-way",
        nsim=100, seed=1)

## Model 12 ##
PROCESS(data, y="score", x="fight",
        meds="late",
        mods=c("gender", "family_inc"),
        mod.path=c("x-m", "x-y"),
        mod.type="3-way",
        nsim=100, seed=1)

## For more examples (other PROCESS models), see:
## https://
}
}
\references{
Yzerbyt, V., Muller, D., Batailler, C., & Judd, C. M. (2018).
New recommendations for testing indirect effects in mediational models:
The need to report and test component paths.
\emph{Journal of Personality and Social Psychology, 115}(6), 929-943.
\doi{10.1037/pspa0000132}
}
\seealso{
\code{\link{model_summary}},
\code{\link{med_summary}},
\code{\link{lavaan_summary}}
}
